services:
  orion:
    image: telefonicaiot/fiware-orion
    ports:
      - "1026:1026"
    depends_on:
      - mongo
    command: -dbURI mongodb://mongo
    networks:
      - fiware

  grafana:
    image: grafana/grafana:12.0.1
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_INSTALL_PLUGINS=grafana-clock-panel
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_USERS_DEFAULT_THEME=light
      - GF_USERS_AUTO_ASSIGN_ORG_ROLE=Viewer
      - GF_FEATURE_TOGGLES_ENABLE=false
      - GF_DISABLE_SANDBOX=true
    volumes:
    - grafana-storage:/var/lib/grafana
    - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
    - ./grafana/provisioning/dashboards/json:/etc/grafana/provisioning/dashboards/json
    - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
    - ./grafana/grafana.ini:/etc/grafana/grafana.ini
    networks:
      - fiware

  influxdb:
    image: influxdb:1.8
    container_name: influxdb
    ports:
      - "8086:8086"
    environment:
      - INFLUXDB_DB=smartcampus
      - INFLUXDB_HTTP_AUTH_ENABLED=false
    volumes:
      - influxdb-storage:/var/lib/influxdb
    networks:
      - fiware
  cygnus:
    image: fiware/cygnus-ngsi
    container_name: cygnus
    depends_on:
      - influxdb
    ports:
      - "5050:5050"
    environment:
      - CYGNUS_INFLUXDB_HOST=influxdb
      - CYGNUS_INFLUXDB_PORT=8086
      - CYGNUS_INFLUXDB_DBNAME=smartcampus
      - CYGNUS_LOG_LEVEL=DEBUG  
      - CYGNUS_INFLUXDB_USERNAME=
      - CYGNUS_INFLUXDB_PASSWORD=
      - CYGNUS_SERVICE_PORT=5050
      - CYGNUS_SERVICE_PORT_ADMIN=5080
  subscription-registrar:
    build:
      context: ./services
      dockerfile: Dockerfile
      args:
        - APP_FILE=dummy 
        - CONFIG=subscription
    depends_on:
      - orion
      - cygnus
    networks:
      - fiware
  weather-orion-cron:
    build:
      context: ./services
      dockerfile: Dockerfile
      args:
        - APP_FILE=send_weather_to_orion
        - CONFIG=cron
    container_name: weather-orion-cron
    depends_on:
      - orion
    networks:
      - fiware
     
  mongo:
    image: mongo:8.0
    volumes:
      - ./mongodb/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - fiware

  weather-alert-course:
    build:
      context: ./services
      dockerfile: Dockerfile
      args:
        - APP_FILE=weather_alert_course
        - CONFIG=server
    environment:
      - PYTHONUNBUFFERED=1
      - ORION_URL=http://orion:1026
      - CALLBACK_URL=http://weather-alert-course:5000/notify
    depends_on:
      - orion
    networks:
      - fiware
    volumes:
      - ./services:/app/services

  weather-context-enricher:
    build:
      context: ./services
      dockerfile: Dockerfile
      args:
        - APP_FILE=weather_context_enricher
        - CONFIG=server
    environment:
      - PYTHONUNBUFFERED=1
      - ORION_URL=http://orion:1026
      - CALLBACK_URL=http://weather-context-enricher:5000/notify
    depends_on:
      - orion
    networks:
      - fiware

  weather-simulator:
    build:
      context: ./services
      dockerfile: Dockerfile
      args:
        - APP_FILE=weather_simulator
        - CONFIG=script
    environment:
      - PYTHONUNBUFFERED=1
      - ORION_URL=http://orion:1026
    depends_on:
      - orion
    networks:
      - fiware

  course-instance-simulator:
    build:
      context: ./services
      dockerfile: Dockerfile
      args:
        - APP_FILE=course_instance_simulator
        - CONFIG=script
    environment:
      - PYTHONUNBUFFERED=1
      - ORION_URL=http://orion:1026
      - ENTITIES_DIR=./entities
    depends_on:
      - orion
    networks:
      - fiware
    volumes:
      - ./entities:/app/entities:ro

networks:
  fiware:

volumes:
  grafana-storage:
  influxdb-storage: